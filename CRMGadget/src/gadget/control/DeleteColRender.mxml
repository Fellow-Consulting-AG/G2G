<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
								  xmlns:s="library://ns.adobe.com/flex/spark" 
								  xmlns:mx="library://ns.adobe.com/flex/mx" 
								 xmlns:control="gadget.control.*"
								 textAlign="center"
								 >
	<fx:Script>
		<![CDATA[
			import gadget.i18n.i18n;
			import gadget.util.StringUtils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.dataGridClasses.DataGridListData;
			import mx.controls.listClasses.BaseListData;
			import mx.events.CloseEvent;
			private var grid:DataGrid;
			private var _addEmptyRow:Boolean=false;
			private var _parentComp:Sprite;

			public function get parentComp():Sprite
			{
				return _parentComp;
			}

			public function set parentComp(value:Sprite):void
			{
				_parentComp = value;
			}
			override public function set data(value:Object):void{		
				super.data = value;
				var isSHowDeleteButton:Boolean = false;
				for(var f:String in value){
					if(f!='mx_internal_uid' && value[f]!=null && !StringUtils.isEmpty(value[f].toString())){
						isSHowDeleteButton = true;
						break;
					}
				}
				btnDelete.visible=isSHowDeleteButton;
			}		

		
		
			override public function set listData(value:BaseListData):void{
				super.listData = value;
				if(value!=null){
					grid = value.owner as DataGrid;					
				}
			}
			public final function deleteRow():void{
				if(grid!=null){
				Alert.show(i18n._("GLOBAL_ARE_YOU_SURE_YOU_WANT_TO_DELETE@Are you sure you want to delete?"), i18n._('GLOBAL_DELETE@Delete'), Alert.YES | Alert.NO, parentComp, alertListener, null, Alert.NO);
				
					function alertListener(eventObj:CloseEvent):void {
						
						if (eventObj.detail==Alert.YES) {
							
							var items:ArrayCollection = grid.dataProvider as ArrayCollection;
							if(items!=null && items.length>0){
								var rowInd:int=items.getItemIndex(data);
								items.removeItemAt(rowInd);
								if(items.length==rowInd && addEmptyRow){//delete last row must be add empty row
									items.addItem(new Object());
								}
								grid.dataProvider = items;
								grid.validateNow();
							}
							
						}
					}
				}
				
			}

			public function get addEmptyRow():Boolean
			{
				return _addEmptyRow;
			}

			public function set addEmptyRow(value:Boolean):void
			{
				_addEmptyRow = value;
			}
			
			
		]]>
		
	</fx:Script>
	<mx:LinkButton id="btnDelete" icon="@Embed(source='/assets/cancel.png')" toolTip="{i18n._('GLOBAL_DELETE@Delete')}" click="{deleteRow()}" />
</s:MXDataGridItemRenderer>

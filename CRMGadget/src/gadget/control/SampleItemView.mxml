<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:control="gadget.control.*"
		   creationComplete="canvas1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import gadget.dao.Database;
			import gadget.i18n.i18n;
			import gadget.util.FieldUtils;
			import gadget.util.StringUtils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.FlexEvent;
			[Bindable] public var item:Object;
			[Bindable] public var rows:ArrayCollection;
			
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void
			{
				if(rows==null){
					rows = new ArrayCollection();
				}
				initColumns();
				//add empty row
				rows.addItem(new Object());
				editableGrid.dataProvider = rows;
				editableGrid.validateNow();
				//ADD ACTION
				editableGrid.addEventListener(KeyboardEvent.KEY_DOWN, function(evt:KeyboardEvent):void {
					if(evt.keyCode == Keyboard.ENTER || evt.keyCode == Keyboard.TAB){
						if( editableGrid.editedItemPosition &&  rows.length-1 == editableGrid.editedItemPosition.rowIndex  && editableGrid.editedItemPosition.columnIndex == editableGrid.columns.length -1 ){
							var newObj:Object = {};
							if(rows==null){
								rows = new ArrayCollection();
							}
							rows.addItem(newObj); //add a blank record
							var index:Number = editableGrid.editedItemPosition.rowIndex+1;
							editableGrid.dataProvider = rows;
							//								editableGrid.selectedIndex = index;
							editableGrid.editedItemPosition = {columnIndex:0, rowIndex:index};
						}
					}
				});
				
				
				
			}
			
			protected function initColumns():void{
				var cols:Array = new Array();
				
				//itemname
				var itemName:DataGridColumn =createColumn('CustomObject14Name',25);				
				itemName.editorDataField='selectedItem';
				var colRenderer:ClassFactory = new ClassFactory(AutoCompleteColRender);
				colRenderer.properties={											
					'dataProvider':getDataProvider(),
					'updateRelateField':function(item:Object,selectedItem:Object):void{
						if(selectedItem!=null){
							item.CustomObject14ExternalSystemId = selectedItem.ExternalSystemId;
						}
					},
					'labelFunction':function(item:Object):String{
						return item.Name;
					}};
				itemName.labelFunction = getItemName;				
				itemName.itemEditor = colRenderer;				
				cols.push(itemName);
				
				//item no
				cols.push(createColumn('CustomObject14ExternalSystemId',15,false));
				cols.push(createColumn('IndexedNumber0',15));
				cols.push(createColumn('CustomCurrency1',15));
				cols.push(createColumn('CustomCurrency2',15));
				cols.push(createColumn('CustomCurrency0',15));
				
				editableGrid.columns = cols;
			}
			
			
			private function createColumn(dataField:String,width:Number,editable:Boolean=true):DataGridColumn{
				var col:DataGridColumn = new DataGridColumn();
				col.headerText = FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,dataField);
				col.dataField = dataField;
				col.editable = editable;
				col.width=width;
				
				return col;
				
			}
			private function getItemName(item:Object, col:AdvancedDataGridColumn):String {
				if(item == null) return "";
				return item[col.dataField]?item[col.dataField].Name:"";
			}
			
			private function getDataProvider():ArrayCollection {
				
				
				
				var picklist:ArrayCollection = Database.customObject14Dao.findAll(new ArrayCollection([{element_name:"Id,Name,ExternalSystemId"}]),null,null,-1);
				if(picklist!=null){
					picklist.addItemAt({Name:'',Id:'',ExternalSystemId:''},0);
				}
				return picklist;
			}
			
		]]>
	</fx:Script>
	<mx:VBox top="36" left="8" right="8" bottom="8">	
		<mx:DataGrid id="editableGrid" editable="true" sortableColumns="false" width="100%" height="100%"/>	
	</mx:VBox>
	<mx:HBox y="0" x="{width-100}"  paddingTop="-1" id="buttonImportExport">
		<mx:LinkButton icon="@Embed(source='/assets/save_config.png')" toolTip="{i18n._('SAVE_ORDER_TEMPLATE@Save as Template')}" />
		<mx:LinkButton icon="@Embed(source='/assets/upload_config.png')" toolTip="{i18n._('IMPORT_TEMPLATE@Import Template')}" />		
	</mx:HBox>
</mx:Canvas>

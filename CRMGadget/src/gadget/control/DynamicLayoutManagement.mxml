<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:control="gadget.control.*"
		   resizable="false"
		   width="400" height="400"
		   title="{i18n._('DYNAMIC_BLOCK_MANAGMENT@Dynamic block management')}"
		   showFlexChrome="false" transparent="true" systemChrome="none" xmlns:form="gadget.form.*"
		   creationComplete="init(event)"
		   >
	
	<mx:Script>
		<![CDATA[
			import gadget.dao.Database;
			import gadget.i18n.i18n;
			import gadget.service.PicklistService;
			import gadget.sync.incoming.FieldManagementService;
			import gadget.util.ImageUtils;
			import gadget.util.StringUtils;
			import gadget.window.WindowManager;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			private function refreshListDataGrid():void{
				
				
				fieldsGrid.dataProvider = Database.blockLayoutDao.getAvailableName(getEntity());
			}
			
			protected function init(event:FlexEvent):void
			{
				
				cboEntitys.setFocus();
				
			}
			
			private function getEntity():String{
				return CalculatedField.getComboDataField(cboEntitys);
			}
			
			protected function btnCreate_clickHandler(event:MouseEvent):void
			{
				var blockLayout:BlockLayoutManager = new BlockLayoutManager();
				blockLayout.item = {entity:getEntity()};
				WindowManager.openModal(blockLayout);
				
			}
			private function checkUsingField(list:ArrayCollection):Boolean{
				var customfields:ArrayCollection = Database.layoutDao.selectCustomFields(list[0].entity);
				for each (var cusField:Object in customfields) {
					for each(var objDeleteF:Object in list){
						if(cusField.element_name==objDeleteF.fieldName){
							Alert.show(i18n._("FIELDMANAGMENTWINDOW_CAN_NOT_DELETE_THIS_FIELD") + "<" + objDeleteF.displayName + ">." + i18n._("FIELDMANAGMENTWINDOW_IT_IS_USING_IN_THE_PROJECT"),titlebar.title, Alert.OK, this);
							return true;
						}
					}
				}
				return false;
			}
			protected function btndelete_clickHandler(event:MouseEvent):void
			{
				var selectedList:ArrayCollection = FieldManagmentWindow.getListSelectedData(fieldsGrid);
				if(selectedList.length>0){
					if(checkUsingField(selectedList)) return;
					Alert.show(i18n._('GLOBAL_ARE_YOU_SURE_YOU_WANT_TO_DELETE'),titlebar.title, Alert.YES|Alert.NO, this, function(event:CloseEvent):void{
						if (event.detail==Alert.YES){
							for each(var obj:Object in selectedList){
								Database.customFieldTranslatorDao.deleteFieldByColumnName(obj.entity,obj.column_name);
								Database.customFieldDao.deleteCustomField(obj);
								Database.territoryTreeDAO._delete(obj);
								Database.depthStructureTreeDAO._delete(obj);
								if((obj.column_name as String).indexOf(CustomLayout.BINDPICKLIST_CODE)>-1){
									PicklistService.getPicklist(obj.entity,obj.fieldName,true,true,true);
									PicklistService.getBindPicklist(obj.entity,obj.fieldName,true,true);
								}
							}
							refreshListDataGrid();
						}    	 
					});
				}else{
					Alert.show(i18n._('GLOBAL_PLEASE_SELECT_A_RECORD'), "", Alert.OK, this);
				}	
				
			}
			
		]]>
	</mx:Script>
	<mx:Canvas id="detailCanvas" horizontalScrollPolicy="off" styleName="main" left="0" top="0" width="100%" height="100%" right="0" bottom="0">
		<control:TitleBar title="{i18n._('DYNAMIC_BLOCK_MANAGMENT@Dynamic block management')}" icon="@Embed(source='/assets/customize.png')" id="titlebar" y="2" x="25"/>
		<!--mx:VBox top="40" left="0" right="0" bottom="0"-->
		<!-- mx:Canvas width="100%" -->
		<mx:VBox top="40" left="0" right="0" bottom="0">
			<mx:Form paddingTop="5" paddingLeft="0" width="100%">	
				<mx:FormItem>
					<mx:HBox>
						<mx:Label text="{i18n._('GLOBAL_ENTITY')}" textAlign="right" width="100" fontWeight="bold" />
						<mx:ComboBox id="cboEntitys" dataProvider="{FieldManagmentWindow.entityList}" labelFunction="{FieldManagmentWindow.getEntityDisplayName}" change="refreshListDataGrid()" width="160" />
						
					</mx:HBox>
				</mx:FormItem>
				<mx:FormItem paddingTop="10">
					<mx:VBox>							
						<mx:HBox paddingLeft="10">
							<mx:DataGrid id="fieldsGrid" width="100%"  doubleClickEnabled="true" height="230">
								<mx:columns>
									<mx:DataGridColumn sortable="false" width="30" dataField="batchUpdate" headerText="{i18n._('check Delete')}" itemRenderer="CheckBoxRenderer" headerRenderer="CheckBoxRenderer" rendererIsEditor="true" />
									<mx:DataGridColumn dataField="Name" width="320" headerText="{i18n._('GLOBAL_NAME@Name')}"/>									
								</mx:columns>
							</mx:DataGrid>
						</mx:HBox>
						<mx:HBox paddingLeft="20" width="100%">
							<mx:Button id="btnNewField" label="{i18n._('GLOBAL_CREATE')}" click="btnCreate_clickHandler(event)" right="0"/>
							<mx:Button id="btndeleteField" label="{i18n._('GLOBAL_DELETE')}" click="btndelete_clickHandler(event)" right="0"/>	
							
						</mx:HBox>
						<mx:HBox width="95%" horizontalAlign="right">
							<mx:Button id="closeBtn" label="{i18n._('GLOBAL_CLOSE')}" click="close()" right="0" icon="{ImageUtils.cancelIcon}"/>
						</mx:HBox>
					</mx:VBox>						
				</mx:FormItem>				
			</mx:Form>
			
		</mx:VBox>	
		
	</mx:Canvas>
</mx:Window>

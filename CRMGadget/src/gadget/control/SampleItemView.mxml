<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:control="gadget.control.*"
		   creationComplete="canvas1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import gadget.dao.Database;
			import gadget.i18n.i18n;
			import gadget.util.FieldUtils;
			import gadget.util.StringUtils;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			[Bindable] public var item:Object;
			[Bindable] public var rows:ArrayCollection;
			
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void
			{
				if(rows==null){
					rows = new ArrayCollection();
				}
				//add empty row
				rows.addItem(new Object());
				editableGrid.dataProvider = rows;
				editableGrid.validateNow();
				//ADD ACTION
				editableGrid.addEventListener(KeyboardEvent.KEY_DOWN, function(evt:KeyboardEvent):void {
					if(evt.keyCode == Keyboard.ENTER || evt.keyCode == Keyboard.TAB){
						if( editableGrid.editedItemPosition &&  rows.length-1 == editableGrid.editedItemPosition.rowIndex  && editableGrid.editedItemPosition.columnIndex == editableGrid.columns.length -1 ){
							var newObj:Object = {};
							if(rows==null){
								rows = new ArrayCollection();
							}
							rows.addItem(newObj); //add a blank record
							var index:Number = editableGrid.editedItemPosition.rowIndex+1;
							editableGrid.dataProvider = rows;
							//								editableGrid.selectedIndex = index;
							editableGrid.editedItemPosition = {columnIndex:0, rowIndex:index};
						}
					}
				});
				
				
				
			}
			
			private function getItemName(item:Object, col:DataGridColumn):String {
				if(item == null) return "";
				return item[col.dataField]?item[col.dataField].Name:"";
			}
			
		]]>
	</fx:Script>
	<mx:VBox top="36" left="8" right="8" bottom="8">	
		<mx:DataGrid id="editableGrid" editable="true" sortableColumns="false" width="100%" height="100%" >
			
			<mx:columns>				
							
				<mx:DataGridColumn dataField="Customobject14Name" editorDataField="selectedItem" labelFunction="{getItemName}" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'CustomObject14Name')}" >
					<mx:itemEditor>
						<fx:Component>
							<control:AutoComplete lookAhead="true" dataProvider="{getDataProvider()}" labelField="Name">
								
								<fx:Script>
									<![CDATA[
										import gadget.dao.Database;
										
										import mx.collections.ArrayCollection;
										
										private function getDataProvider():ArrayCollection {
											
											
											
											var picklist:ArrayCollection = Database.customObject14Dao.findAll(new ArrayCollection([{element_name:"Id,Name,ExternalSystemId"}]),null,null,-1);
											if(picklist!=null){
												picklist.addItemAt({Name:'',Id:'',ExternalSystemId:''},0);
											}
											return picklist;
										}
										override public function set selectedItem(value:Object):void
										{						
											if(value!=null){
												data.CustomObject14ExternalSystemId = value.ExternalSystemId;
											}
											super.selectedItem = value;
											
											
										}
										
									]]>
								</fx:Script>
							</control:AutoComplete >
						</fx:Component>
					</mx:itemEditor>
				</mx:DataGridColumn>
				<mx:DataGridColumn editable="false" dataField="CustomObject14ExternalSystemId" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'CustomObject14ExternalSystemId')}"/>
				<mx:DataGridColumn dataField="IndexedNumber0" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'IndexedNumber0')}"/>
				<mx:DataGridColumn dataField="CustomCurrency1" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'CustomCurrency1')}"/>
				<mx:DataGridColumn dataField="CustomCurrency2" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'CustomCurrency2')}"/>
				<mx:DataGridColumn dataField="CustomCurrency0" headerText="{FieldUtils.getFieldDisplayName(Database.customObject12Dao.entity,'CustomCurrency0')}"/>
				
			</mx:columns>				
		</mx:DataGrid>		
		
	</mx:VBox>
	<mx:HBox y="0" x="{width-100}"  paddingTop="-1" id="buttonImportExport">
		<mx:LinkButton icon="@Embed(source='/assets/save_config.png')" toolTip="{i18n._('SAVE_ORDER_TEMPLATE@Save as Template')}" />
		<mx:LinkButton icon="@Embed(source='/assets/upload_config.png')" toolTip="{i18n._('IMPORT_TEMPLATE@Import Template')}" />		
	</mx:HBox>
</mx:Canvas>
